import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { gql, GraphQLClient } from 'graphql-request'
import Section from '../components/Section'
import Navbar from '../components/Navbar'

export const getStaticProps = async () => {
  const url = process.env.ENDPOINT

  const graphQLClient = new GraphQLClient(url, {
    headers: {
      "Authorization": process.env.DISNEY_CLONE_TOKEN
    }
  })

  const videosQuery = gql`
  query {
    videos {
      id,
      title,
      description,
      seen,
      slug,
      tags,
      thumbnail {
        url
      },
      mp4 {
        url
      }
    }
  }`

  const accountQuery = gql`
  query {
    account(where: {id:"cku1oc72o9r880c34wblr5mo4"}) {
      username,
      avatar {
        url
      }
    }
  }`

  const data = await graphQLClient.request(videosQuery)
  const videos = data.videos
  const accountData = await graphQLClient.request(accountQuery)
  const account = accountData.account

  return {
    props: {
      videos,
      account
    }
  }
}

export default function Home({ videos, account }) {
  const randomVideo = (videos) => {
    return videos[Math.floor(Math.random() * videos.length)]
  }

  const filterVideos = (videos, genre) => {
    return videos.filter((video) => video.tags.includes(genre))
  }

  const unseenVideos = (videos) => {
    return videos.filter(video => video.seen == false || video.seen == null)
  }
  // returns all the videos unseen

  return (
    <div className="app">
      <Navbar account={account} />

      <Head>
        <title>Disney+ Clone</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main>
        <div className="main-video">
          <img
            src={randomVideo(videos).thumbnail.url}
            alt={randomVideo(videos).title}
          />
        </div>

        <div className="video-feed">
        <Section genre={'Recommended for you'} videos={unseenVideos(videos)} />  
        {/* ^ based on what you've seen */}
          <Section genre={'Family'} videos={filterVideos(videos, 'family')} />
          <Section genre={'Comedy'} videos={filterVideos(videos, 'comedy')} />
          <Section genre={'Pixar'} videos={filterVideos(videos, 'pixar')} />
          <Section genre={'Action'} videos={filterVideos(videos, 'action')} />
        </div>

        <p className={styles.description}>

        </p>
        
      </main>
    </div>
  )
}
